{"version":3,"sources":["component/MyMessage.jsx","component/TheirMessage.jsx","component/MessageForm.jsx","component/ChatFeed.jsx","component/LoginForm.jsx","chat.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","seterror","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","Chat","getItem","projectID","userSecret","renderChatFeed","chatAppProps","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.140394ad.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\r\n    if(message?.attachments?.length>0){\r\n    return(\r\n        <img  \r\n        src={message.attachments[0].file}\r\n        alt=\"Message-attachment\"\r\n        className = \"message-image\"\r\n        style = {{ float:'right' }}\r\n        />\r\n    );\r\n    }\r\n    return(\r\n        <div className=\"message\" style = {{float:'right', marginRight:'14px', color:'white', backgroundColor: 'purple'}}>\r\n           {message.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username ;\r\n\r\n    return(\r\n        <div className= \"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div className=\"message-avatar\"\r\n                style ={{backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n                />\r\n            )}\r\n            {message?.attachments?.length>0\r\n                ?(\r\n                    <img  \r\n                    src={message.attachments[0].file}\r\n                    alt=\"Message-attachment\"\r\n                    className = \"message-image\"\r\n                    style = {{ marginLeft:isFirstMessageByUser ? '4px' : '48px' }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"message\" style = {{float:'left', backgroundColor: '#CABCDC', marginLeft:isFirstMessageByUser ? '4px' : '48px'}}>\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n \r\n        if(text.length>0) sendMessage(creds, chatId, { text });\r\n\r\n        setValue(''); \r\n    };\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    };\r\n\r\n\r\n    const handleUpload = (event) =>{\r\n        sendMessage(creds,chatId,{files:event.target.files, text:''})\r\n    } \r\n\r\n    return(\r\n        <form className= \"message-form\" onSubmit={handleSubmit}>\r\n            <input className =\"message-input\"\r\n                placeholder=\"Send a Message ...\"\r\n                value ={value}\r\n                onChange = {handleChange}\r\n                onSubmit = {handleSubmit}\r\n                />\r\n\r\n            <label htmlFor= \"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined  className=\"picture-icon\"/>\r\n                </span>\r\n            </label>\r\n            <input  \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style = {{display:'none'}}\r\n                onChange = {handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, seterror] = useState('');\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = {'Project-ID': \"db7d1ab2-6748-476e-bbb7-3dfe45c63415\", 'User-Name': username, 'User-Secret': password};\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject});\r\n\r\n            localStorage.setItem('username',username);\r\n            localStorage.setItem('password',password);\r\n            window.location.reload();\r\n        } catch (error) {\r\n            seterror('Oops, You Entered Wrong credentials. Please try again ...')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Abhishek's Chat Application</h1>\r\n                <form onSubmit= {handleSubmit}>\r\n                  <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />  \r\n                  <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />  \r\n                  <div align = \"center\">\r\n                      <button type=\"submit\" className=\"button\">\r\n                          <span>Enter Chatroom</span>\r\n                      </button>\r\n                  </div>\r\n                  <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )    \r\n\r\n}\r\n\r\n\r\n\r\nexport default LoginForm;","// import React from 'react';\r\nimport { ChatEngine }  from 'react-chat-engine';\r\n\r\nimport ChatFeed from './component/ChatFeed';\r\nimport LoginForm from './component/LoginForm';\r\n\r\nimport './style.css';\r\n\r\n\r\n\r\nconst Chat = () => {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return(\r\n       <ChatEngine \r\n        height=\"100vh\"\r\n        projectID=\"db7d1ab2-6748-476e-bbb7-3dfe45c63415\"\r\n        userName={localStorage.getItem('username')}\r\n        userSecret={localStorage.getItem('password')}\r\n        renderChatFeed= {(chatAppProps) => <ChatFeed  {... chatAppProps }  />}\r\n       />\r\n    );\r\n}\r\n\r\nexport default Chat;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n//Components\n\nimport Chat from './chat';\n\n//End Components\n\nconst App = () => {\n  return(\n    <div>\n      <Chat />\n    </div>\n  )\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}